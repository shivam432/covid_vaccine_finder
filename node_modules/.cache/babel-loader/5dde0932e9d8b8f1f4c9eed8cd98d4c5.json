{"ast":null,"code":"var _jsxFileName = \"/home/sanskar/Desktop/covid_vaccine/src/views/components/sections/tooltip-popover.jsx\";\nimport React, { useState } from 'react';\nimport { Button, Tooltip, Popover, PopoverHeader, PopoverBody, Container, Row, Col } from 'reactstrap';\n\nconst TooltipItem = props => {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const toggle = () => {\n    setTooltipOpen(!tooltipOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    color: \"secondary\",\n    id: 'Tooltip-' + props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, props.item.text), /*#__PURE__*/React.createElement(Tooltip, {\n    placement: props.item.placement,\n    isOpen: tooltipOpen,\n    target: 'Tooltip-' + props.id,\n    toggle: toggle.bind(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Tooltip Content!\"));\n};\n\nconst PopoverItem = props => {\n  const [popoverOpen, setPopoverOpen] = useState(false);\n\n  const toggle = () => {\n    setPopoverOpen(!popoverOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-1\",\n    color: \"secondary\",\n    id: 'Popover-' + props.id,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, props.item.text), /*#__PURE__*/React.createElement(Popover, {\n    placement: props.item.placement,\n    isOpen: popoverOpen,\n    target: 'Popover-' + props.id,\n    toggle: toggle.bind(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PopoverHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Popover Title\"), /*#__PURE__*/React.createElement(PopoverBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.\")));\n};\n\nconst TooltipPopover = () => {\n  const tooltips = [{\n    placement: 'top',\n    text: 'Tooltip on Top'\n  }, {\n    placement: 'bottom',\n    text: 'Tooltip on Bottom'\n  }, {\n    placement: 'left',\n    text: 'Tooltip on Left'\n  }, {\n    placement: 'right',\n    text: 'Tooltip on Right'\n  }];\n  const popovers = [{\n    placement: 'top',\n    text: 'Popover on Top'\n  }, {\n    placement: 'bottom',\n    text: 'Popover on Bottom'\n  }, {\n    placement: 'left',\n    text: 'Popover on Left'\n  }, {\n    placement: 'right',\n    text: 'Popover on Right'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacer\",\n    id: \"toolpop-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"7\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Tooltip & Popover\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Here you can check Demos we created based on WrapKit. Its quite easy to Create your own dream website & dashboard in No-time.\"))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, tooltips.map((tooltip, i) => {\n    return /*#__PURE__*/React.createElement(TooltipItem, {\n      key: i,\n      item: tooltip,\n      id: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-box m-t-40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, popovers.map((popover, i) => {\n    return /*#__PURE__*/React.createElement(PopoverItem, {\n      key: i,\n      item: popover,\n      id: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }\n    });\n  }))))));\n};\n\nexport default TooltipPopover;","map":{"version":3,"sources":["/home/sanskar/Desktop/covid_vaccine/src/views/components/sections/tooltip-popover.jsx"],"names":["React","useState","Button","Tooltip","Popover","PopoverHeader","PopoverBody","Container","Row","Col","TooltipItem","props","tooltipOpen","setTooltipOpen","toggle","id","item","text","placement","bind","PopoverItem","popoverOpen","setPopoverOpen","TooltipPopover","tooltips","popovers","map","tooltip","i","popover"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Tooltip, Popover, PopoverHeader, PopoverBody, Container, Row, Col } from 'reactstrap';\r\n\r\nconst TooltipItem = (props) => {\r\n\r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setTooltipOpen(!tooltipOpen);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <Button className=\"mr-1\" color=\"secondary\" id={'Tooltip-' + props.id}>\r\n                {props.item.text}\r\n            </Button>\r\n            <Tooltip placement={props.item.placement} isOpen={tooltipOpen} target={'Tooltip-' + props.id} toggle={toggle.bind(null)}>\r\n                Tooltip Content!\r\n          </Tooltip>\r\n        </span>\r\n    );\r\n}\r\n\r\nconst PopoverItem = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setPopoverOpen(!popoverOpen);\r\n    }\r\n\r\n    return (\r\n        <span>\r\n            <Button className=\"mr-1\" color=\"secondary\" id={'Popover-' + props.id} type=\"button\">\r\n                {props.item.text}\r\n            </Button>\r\n            <Popover placement={props.item.placement} isOpen={popoverOpen} target={'Popover-' + props.id} toggle={toggle.bind(null)}>\r\n                <PopoverHeader>Popover Title</PopoverHeader>\r\n                <PopoverBody>Sed posuere consectetur est at lobortis. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum.</PopoverBody>\r\n            </Popover>\r\n        </span>\r\n    );\r\n}\r\n\r\nconst TooltipPopover = () => {\r\n\r\n    const tooltips = [\r\n        {\r\n            placement: 'top',\r\n            text: 'Tooltip on Top'\r\n        },\r\n        {\r\n            placement: 'bottom',\r\n            text: 'Tooltip on Bottom'\r\n        },\r\n        {\r\n            placement: 'left',\r\n            text: 'Tooltip on Left'\r\n        },\r\n        {\r\n            placement: 'right',\r\n            text: 'Tooltip on Right'\r\n        }\r\n    ];\r\n\r\n    const popovers = [\r\n        {\r\n            placement: 'top',\r\n            text: 'Popover on Top'\r\n        },\r\n        {\r\n            placement: 'bottom',\r\n            text: 'Popover on Bottom'\r\n        },\r\n        {\r\n            placement: 'left',\r\n            text: 'Popover on Left'\r\n        },\r\n        {\r\n            placement: 'right',\r\n            text: 'Popover on Right'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"spacer\" id=\"toolpop-component\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col md=\"7\" className=\"text-center\">\r\n                            <h1 className=\"title font-bold\">Tooltip & Popover</h1>\r\n                            <h6 className=\"subtitle\">Here you can check Demos we created based on WrapKit. Its quite easy to Create your own dream website &amp; dashboard in No-time.</h6>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n                    <Col md=\"12\" className=\"text-center\">\r\n                        <div className=\"button-box\">\r\n                            {tooltips.map((tooltip, i) => {\r\n                                return <TooltipItem key={i} item={tooltip} id={i} />;\r\n                            })}\r\n                        </div>\r\n                        <div className=\"button-box m-t-40\">\r\n                            {popovers.map((popover, i) => {\r\n                                return <PopoverItem key={i} item={popover} id={i} />;\r\n                            })}\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TooltipPopover;\r\n"]},"metadata":{},"sourceType":"module"}